role,content,example_num,prompt_iteration
system,"You and I (system) will work together to build a prompt for the task of the user via a chat with the user. This prompt will be fed to a model dedicated to perform the user's task. Our aim is to build a prompt that when fed to the model, produce outputs that are aligned with the user's expectations. Thus, the prompt should reflect the specific requirements and preferences of the user from the output as expressed in the chat. You will interact with the user to gather information regarding their preferences and needs. I will send the prompts you suggest to the dedicated model to generate outputs, and pass them back to you, so that you could discuss them with the user and get feedback. User time is valuable, keep the conversation pragmatic. Make the obvious decisions by yourself.Don't greet the user at your first interaction.",,
system,"You should communicate with the user and system ONLY via python API described below, and not via direct messages. The input parameters to API functions should be string literals using double quotes. Remember to escape double-quote characters inside the parameter values.
Note that the user is not aware of the API, so don't not tell the user which API you are going to call.
 Format ALL your answers python code calling one of the following functions:",,
system,function self.submit_message_to_user(message): call this function to submit your message to the user. Use markdown to mark the prompts and the outputs. ,,
system,function self.submit_prompt(prompt): call this function to inform the system that you have a new suggestion for the prompt. Use it only with the prompts approved by the user. ,,
system,"function self.switch_to_example(example_num): call this function before you start discussing with the user an output of a specific example, and pass the example number as parameter. ",,
system,"function self.show_original_text(example_num): call this function when the user asks to show the original text of an example, and pass the example number as parameter. ",,
system,"function self.output_accepted(example_num, output): call this function every time the user unequivocally accepts an output. Pass the example number and the output text as parameters. ",,
system,function self.end_outputs_discussion(): call this function after all the outputs have been discussed with the user and all NUM_EXAMPLES outputs were accepted by the user. ,,
system,function self.conversation_end(): call this function when the user wants to end the conversation. ,,
system,function self.task_is_defined(): call this function when the user has defined the task and it's clear to you. You should only use this callback once. ,,
system,Here are some examples of the input texts provided by the user: ,,
system,"Example 1: I'm unable to rate this anything other than 5 stars, despite a few pitfalls. Let's start with the two bad things - you (nearly always) have to queue for up to 20-30 minutes at peak times (lunch is better in this regard), and the staff are often on the rude side (they have little incentive not to be, with a fixed service charge and a perennially packed restaurant). But, this restaurant in a London favourite. The sliced steak and ""secret sauce"", with fries, served in two sittings, is just phenomenally delicious. The bread and salad you get as a starter is great too. And the range of puddings are impressive and all that I have tried delicious. I would eat at this restaurant weekly for the rest of my life, happily.",1.0,
system,"Example 2: The wait on a cold October Saturday was quick and there were outdoor heaters to take the edge off the chill. The food came quickly and was delicious. It's a shame they wouldn't tell us was was in their special and famous sauce. I did think that a restaurant billed as a Marylebone institution should have had slightly friendlier staff with better communication skills. They were stony faced Europeans with haste in their bearings. Our waitress stammered over her words and while topping-up our steak and fries. Having said that, the top-up was very welcome indeed!",2.0,
system,"Example 3: Eating here is a wonderful experience; it is an authentic French restaurant right in the middle of London. For entre√©s, they only serve steak, fries, salad, and bread. Everything is delicious; the steak is cooked exactly right and the accompanying sauce is exquisite. The fries are perfect, remaining crisp throughout the meal. And the salad is flavorful with a bit of tang; the bread is delicious with the salad. The surprise for me was, when I was thinking I wish there were a little more meat, they hold back about a quarter of the meat until the first serving is almost completed, and then bring out the rest, hot and cooked as requested, with more fries. The house wine complemented the meal wonderfully. I had the chocolate tower dessert; it was three layers of meringue combined with two layers of ice cream, topped with whipped cream, and all covered with chocolate sauce. Decadent. And delicious. The servers were busy and efficient, but all of them took the time to explain things to me and all were happy to pose for photos. And I had a pleasant conversation with the hostess, afterwards. Don't be put off by the French reputation for brusqueness; this isn't France and they're quite amiable here.",3.0,
system,"Start with asking the user which task they would like to perform on the texts. Once the task is clear to you, call task_is_defined API. ",,
assistant,"self.submit_message_to_user(""What would you like to do with these texts? Would you like to summarize them, extract specific information, or something else?"")",,
user,summarize,,
assistant,self.task_is_defined(),,
system,"Before suggesting the prompt, briefly discuss the text examples with the user and ask them relevant questions regarding their output requirements and preferences. Please take into account the specific characteristics of the data. Your suggested prompt should reflect the user's expectations from the task output as expressed during the chat. Share the suggested prompt with the user before submitting it. Remember to communicate only via API calls. From this point, don't use task_is_defined API. ",,
assistant,"self.submit_message_to_user(""I see that the texts are reviews of a restaurant. Would you like the summaries to focus on the overall sentiment, the food, the service, or something else?"")",,
user,I would like to find one good thing and one bad thing (if exists),,
assistant,"self.submit_message_to_user(""So, you'd like the summaries to highlight one positive aspect and one negative aspect (if mentioned) of the restaurant in each review. Is that correct? If so, I'll suggest a prompt for the model."")",,
user,yes,,
assistant,"self.submit_message_to_user(""Here's a suggested prompt for the model: **Extract one positive and one negative point (if mentioned) from each restaurant review.** Does this look good to you?"")",,
